{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","services_persons","create","newObject","axios","post","remove","id","delete","concat","getAll","get","edit","newObj","put","Persons","_ref","persons","filterValue","setPersons","setMessage","setError","personService","names","filter","person","name","toUpperCase","includes","map","react_default","a","createElement","key","number","App_Delete","Notification","props","notifStyle","error","styles","errorNotificationStyles","notificationStyles","console","log","message","style","Delete","onClick","window","confirm","then","response","filteredPersons","setTimeout","catch","data","Filter","value","onChange","handleFilterChange","PersonForm","onSubmit","addName","newName","handleNameChange","newNumber","handleNumberChange","type","App","_useState","useState","_useState2","Object","slicedToArray","useEffect","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setFilter","_useState9","_useState10","_useState11","_useState12","App_Notification","App_Filter","event","target","App_PersonForm","preventDefault","some","item","entry","find","changedEntry","objectSpread","App_Persons","display","padding","border","borderRadius","backgroundColor","marginBottom","ReactDOM","render","src_App","document","getElementById"],"mappings":"wMACMA,EAAU,eAkBDC,EAAA,CACbC,OAba,SAAAC,GACb,OAAOC,IAAMC,KAAKL,EAASG,IAa3BG,OAVa,SAAAC,GACb,OAAOH,IAAMI,OAAN,GAAAC,OAAgBT,EAAhB,KAAAS,OAA2BF,KAUlCG,OAnBa,WACb,OAAON,IAAMO,IAAIX,IAmBjBY,KARW,SAACL,EAAIM,GAChB,OAAOT,IAAMU,IAAN,GAAAL,OAAaT,EAAb,KAAAS,OAAwBF,GAAMM,KCTjCE,EAAU,SAAAC,GAA6E,IAA3EC,EAA2ED,EAA3EC,QAASC,EAAkEF,EAAlEE,YAAaC,EAAqDH,EAArDG,WAAYC,EAAyCJ,EAAzCI,WAAYC,EAA6BL,EAA7BK,SAAUC,EAAmBN,EAAnBM,cAElEC,EADgBN,EAAQO,OAAO,SAAAC,GAAM,OAAIA,EAAOC,KAAKC,cAAcC,SAASV,EAAYS,iBAClEE,IAAI,SAAAJ,GAAM,OACpCK,EAAAC,EAAAC,cAAA,MAAIC,IAAKR,EAAOC,MAEXD,EAAOC,KAFZ,IAEmBD,EAAOS,OAEtBJ,EAAAC,EAAAC,cAACG,EAAD,CACEb,cAAeA,EACfF,WAAYA,EACZK,OAAQA,EACRR,QAASA,EACTE,WAAYA,EACZE,SAAUA,OAKlB,OACIS,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACGT,KAMLa,EAAe,SAACC,GACpB,IAAMC,EAAaD,EAAME,MAAQC,EAAOC,wBAA0BD,EAAOE,mBAEzE,OADAC,QAAQC,IAAI,8BAA+BP,EAAME,OAC3B,OAAlBF,EAAMQ,QACD,KAILf,EAAAC,EAAAC,cAAA,OAAKc,MAAOR,GAAZ,IAA0BD,EAAMQ,QAAhC,MAOAE,EAAS,SAACV,GA0Bd,OACEP,EAAAC,EAAAC,cAAA,UAAQgB,QAAS,WAzBFC,OAAOC,QAAS,uDAE7B5B,EAAchB,OAAO+B,EAAMZ,OAAOlB,IACjC4C,KAAK,SAAAC,GACJ,IAAMC,EAAkBhB,EAAMpB,QAAQO,OAAO,SAAAC,GAAM,OAAIA,EAAOlB,KAAO8B,EAAMZ,OAAOlB,KAClF8B,EAAMjB,WAAN,GAAAX,OAAoB4B,EAAMZ,OAAOC,KAAjC,+BACAW,EAAMhB,UAAS,GACfiC,WAAW,WACTjB,EAAMjB,WAAW,OAChB,KACHiB,EAAMlB,WAAWkC,KAElBE,MAAM,SAAAhB,GACLF,EAAMjB,WAAN,cAAAX,OAA4B4B,EAAMZ,OAAOC,KAAzC,sBACA4B,WAAW,WACTjB,EAAMjB,WAAW,OAChB,KACHiB,EAAMf,cAAcZ,SAASyC,KAAK,SAAAC,GAChCf,EAAMlB,WAAWiC,EAASI,QAE5BnB,EAAMhB,UAAS,OAKnB,WAKEoC,EAAS,SAACpB,GACd,OACEP,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACE0B,MAAOrB,EAAMnB,YACbyC,SAAUtB,EAAMuB,uBAOlBC,EAAa,SAACxB,GAClB,OACEP,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAM8B,SAAUzB,EAAM0B,SACpBjC,EAAAC,EAAAC,cAAA,mBAEEF,EAAAC,EAAAC,cAAA,SACE0B,MAAOrB,EAAM2B,QACbL,SAAUtB,EAAM4B,oBAIpBnC,EAAAC,EAAAC,cAAA,qBAEIF,EAAAC,EAAAC,cAAA,SACE0B,MAAOrB,EAAM6B,UACbP,SAAUtB,EAAM8B,sBAItBrC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQoC,KAAK,UAAb,mBA4HKC,EArHH,WAAM,IAAAC,EACeC,mBAAS,IADxBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACRrD,EADQuD,EAAA,GACCrD,EADDqD,EAAA,GAUhBG,oBAPa,WACXrD,EAAcZ,SACXyC,KAAK,SAAAC,GACJjC,EAAWiC,EAASI,SAIV,IAVA,IAAAoB,EAYgBL,mBAAS,IAZzBM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAYRZ,EAZQa,EAAA,GAYCC,EAZDD,EAAA,GAAAE,EAaoBR,mBAAS,IAb7BS,EAAAP,OAAAC,EAAA,EAAAD,CAAAM,EAAA,GAaRb,EAbQc,EAAA,GAaGC,EAbHD,EAAA,GAAAE,EAckBX,mBAAS,IAd3BY,EAAAV,OAAAC,EAAA,EAAAD,CAAAS,EAAA,GAcRhE,EAdQiE,EAAA,GAcKC,EAdLD,EAAA,GAAAE,EAegBd,mBAAS,MAfzBe,EAAAb,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GAeRxC,EAfQyC,EAAA,GAeClE,EAfDkE,EAAA,GAAAC,EAgBWhB,oBAAS,GAhBpBiB,EAAAf,OAAAC,EAAA,EAAAD,CAAAc,EAAA,GAgBRhD,EAhBQiD,EAAA,GAgBDnE,EAhBCmE,EAAA,GAiBhB7C,QAAQC,IAAIL,EAAO,kBAuEnB,OACET,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAACyD,EAAD,CAAc5C,QAASA,EAASN,MAAOA,IACvCT,EAAAC,EAAAC,cAAC0D,EAAD,CACE9B,mBATqB,SAAC+B,GAC1BP,EAAUO,EAAMC,OAAOlC,QASnBxC,YAAaA,IAEfY,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAC6D,EAAD,CACE9B,QA/EU,SAAC4B,GAEf,GADAA,EAAMG,iBACF7E,EAAQ8E,KAAK,SAAAC,GAAI,OAAIA,EAAKtE,OAASsC,IAAU,CAC7C,IAAMiC,EAAQhF,EAAQiF,KAAK,SAAAzE,GAAM,OAAIA,EAAOC,OAASsC,IAC/CzD,EAAK0F,EAAM1F,GAEjB,GAAI0F,EAAM/D,SAAWgC,EACnB7C,GAAS,GACTD,EAAU,GAAAX,OAAIuD,EAAJ,uBACVV,WAAW,WACTlC,EAAW,OACV,UAMH,GAFe6B,OAAOC,QAAP,GAAAzC,OAAkBuD,EAAlB,0DAEH,CACV,IAAMmC,EAAY1B,OAAA2B,EAAA,EAAA3B,CAAA,GAAOwB,EAAP,CAAc/D,OAAQgC,IACxC5C,EAAcV,KAAKL,EAAI4F,GAAchD,KAAK,SAAAC,GACxCjC,EAAWF,EAAQY,IAAI,SAAAJ,GAAM,OAAIA,EAAOlB,KAAOA,EAAKkB,EAAS2B,EAASI,QACtEpC,EAAU,eAAAX,OAAa2C,EAASI,KAAK9B,KAA3B,qCACVL,GAAS,GACTiC,WAAW,WACTlC,EAAW,OACV,OAEJmC,MAAM,SAAAhB,GACLnB,EAAU,cAAAX,OAAY0F,EAAazE,KAAzB,sBACVJ,EAAcZ,SAASyC,KAAK,SAAAC,GAC1BjC,EAAWiC,EAASI,QAEtBF,WAAW,WACTlC,EAAW,OACV,KACHC,GAAS,WAUjBC,EAAcpB,OAJC,CACbwB,KAAMsC,EACN9B,OAAQgC,IAGPf,KAAK,SAAAC,GACJjC,EAAWF,EAAQR,OAAO2C,EAASI,OACnCpC,EAAU,gBAAAX,OAAc2C,EAASI,KAAK9B,KAA5B,oBACVL,GAAS,GACTiC,WAAW,WACTlC,EAAW,OACV,QA4BL6C,iBAvBmB,SAAC0B,GACtBb,EAAWa,EAAMC,OAAOlC,QAuBtBM,QAASA,EACTE,UAAWA,EACXC,mBAtBqB,SAACwB,GAC1BV,EAAaU,EAAMC,OAAOlC,UAuBxB5B,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAACqE,EAAD,CACEpF,QAASA,EACTC,YAAaA,EACbC,WAAYA,EACZC,WAAYA,EACZC,SAAUA,EACVC,cAAeA,MAQjBkB,EAAS,CACbE,mBAAoB,CAClB4D,QAAS,eACTC,QAAS,OACTC,OAAQ,kBACRC,aAAc,OACdC,gBAAiB,YACjBC,aAAc,QAEhBlE,wBAAyB,CACvB6D,QAAS,eACTC,QAAS,OACTC,OAAQ,gBACRC,aAAc,OACdC,gBAAiB,YACjBC,aAAc,SC3PlBC,IAASC,OAAO/E,EAAAC,EAAAC,cAAC8E,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.41377485.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  return axios.get(baseUrl);\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject);\n}\n\nconst remove = id => {\n  return axios.delete(`${baseUrl}/${id}`);\n}\n\nconst edit = (id, newObj) => {\n  return axios.put(`${baseUrl}/${id}`, newObj)\n}\n\nexport default {\n  create: create,\n  remove: remove,\n  getAll: getAll,\n  edit: edit,\n}","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons';\n\n// TODO fix styles\n\n// List of people and their numbers in the address book. \n// returns a list of people and their numbers\nconst Persons = ({persons, filterValue, setPersons, setMessage, setError, personService}) => {\n  const filteredNames = persons.filter(person => person.name.toUpperCase().includes(filterValue.toUpperCase()));\n  const names = filteredNames.map(person =>\n    <li key={person.name}>\n\n        {person.name} {person.number} \n\n        <Delete \n          personService={personService}\n          setMessage={setMessage}\n          person={person}\n          persons={persons}\n          setPersons={setPersons}\n          setError={setError}\n        />\n\n    </li>\n  )\n  return (\n      <div>\n        <ul>\n          {names}\n        </ul>\n      </div>\n  )\n}\n\nconst Notification = (props) => {\n  const notifStyle = props.error ? styles.errorNotificationStyles : styles.notificationStyles;\n  console.log(\"error value passed as prop \", props.error)\n  if (props.message === null) {\n    return null;\n  }\n  else {\n    return (\n      <div style={notifStyle}> {props.message} </div>\n    )\n  }\n}\n\n// Delete button next to entries in address book.\n// By clicking on delete, removes entry from persons state and from database\nconst Delete = (props) => {\n  const clickHandler = () => {\n    const result = window.confirm( \"Haluatko varmasti poistaa henkilön luettelosta?\" );\n    if (result) {\n      personService.remove(props.person.id)\n      .then(response => {\n        const filteredPersons = props.persons.filter(person => person.id !== props.person.id);\n        props.setMessage(`${props.person.name} poistettiin onnistuneesti`)\n        props.setError(false)\n        setTimeout(() => {\n          props.setMessage(null)\n        }, 5000);\n        props.setPersons(filteredPersons);\n      })\n      .catch(error => {\n        props.setMessage(`Henkilö ${props.person.name} oli jo poistettu`)\n        setTimeout(() => {\n          props.setMessage(null)\n        }, 5000)\n        props.personService.getAll().then(response => {\n          props.setPersons(response.data)\n        });\n        props.setError(true)\n      })\n    }\n  }\n  return (\n    <button onClick={() => clickHandler()}>poista</button>\n  )\n}\n\n// Search functionality. Single input field that calls handeFilterChange to filter values out\nconst Filter = (props) => {\n  return (\n    <div>\n      <input \n        value={props.filterValue}\n        onChange={props.handleFilterChange}\n      />\n    </div>\n  )\n}\n\n// Form to add new people to the list\nconst PersonForm = (props) => {\n  return (\n    <div>\n      <form onSubmit={props.addName}>\n        <div>\n          nimi: \n          <input \n            value={props.newName}\n            onChange={props.handleNameChange} \n          />\n        </div>\n\n        <div>\n          numero:\n            <input \n              value={props.newNumber}\n              onChange={props.handleNumberChange}\n            />\n        </div>\n\n        <div>\n          <button type=\"submit\">lisää</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n\n  const hook = () => {\n    personService.getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n  }\n\n  useEffect(hook, []) // only fire on first render (empty array as second parameter)\n\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterValue, setFilter] = useState('')\n  const [ message, setMessage ] = useState(null)\n  const [ error, setError] = useState(false)\n  console.log(error, \"initialised as\")\n\n  const addName = (event) => {\n    event.preventDefault();\n    if (persons.some(item => item.name === newName)) {\n        const entry = persons.find(person => person.name === newName);\n        const id = entry.id;\n\n        if (entry.number === newNumber) {\n          setError(true);\n          setMessage(`${newName} on jo luettelossa`);\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        }\n\n        else {\n          const result = window.confirm(`${newName} on jo luettelossa, korvataanko vanha numero uudella?`);\n\n          if (result) {\n            const changedEntry = {...entry, number: newNumber}; // important\n            personService.edit(id, changedEntry).then(response => {\n              setPersons(persons.map(person => person.id !== id ? person : response.data));\n              setMessage(`Henkilön ${response.data.name} tiedot muutettiin onnistuneesti`)\n              setError(false);\n              setTimeout(() => {\n                setMessage(null)\n              }, 5000)\n            })\n            .catch(error => {\n              setMessage(`Henkilö ${changedEntry.name} oli jo poistettu`)\n              personService.getAll().then(response => {\n                setPersons(response.data)\n              });\n              setTimeout(() => {\n                setMessage(null)\n              }, 5000)\n              setError(true)\n            })\n          }\n        }\n    }\n    else {\n      const newObj = { \n        name: newName,\n        number: newNumber,\n      };\n      personService.create(newObj)\n        .then(response => {\n          setPersons(persons.concat(response.data));\n          setMessage(`Lisättiin ${response.data.name} onnistuneesti `)\n          setError(false);\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n    }\n  }\n\n  const handleNameChange = (event) => {\n      setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Puhelinluettelo</h2>\n      <Notification message={message} error={error}/>\n      <Filter \n        handleFilterChange={handleFilterChange}\n        filterValue={filterValue}\n      />\n      <h3>Lisää uusi</h3>\n      <PersonForm \n        addName={addName}\n        handleNameChange={handleNameChange}\n        newName={newName}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange} \n      />\n      <h3>Numerot</h3>\n      <Persons \n        persons={persons}\n        filterValue={filterValue}\n        setPersons={setPersons}\n        setMessage={setMessage}\n        setError={setError}\n        personService={personService}\n      />\n    </div>\n  )\n}\n\nexport default App\n\nconst styles = {\n  notificationStyles: {\n    display: 'inline-block',\n    padding: '20px',\n    border: '1px solid green',\n    borderRadius: '20px',\n    backgroundColor: '#6161612b',\n    marginBottom: '20px',\n  },\n  errorNotificationStyles: {\n    display: 'inline-block',\n    padding: '20px',\n    border: '1px solid red',\n    borderRadius: '20px',\n    backgroundColor: '#6161612b',\n    marginBottom: '20px',\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}